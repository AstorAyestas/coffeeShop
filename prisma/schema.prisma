// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

generator client {
    provider = "prisma-client-js"
}

model Client {
    id         String      @id @default(cuid())
    name       String
    email      String      @unique
    foodOrder  Order[]
    clientInfo ClientInfo?
}

model ClientInfo {
    id        String @id @default(cuid())
    location  String
    telephone String
    client    Client @relation(fields: [clientId], references: [id])
    clientId  String
}

model Operator {
    id        String   @id @default(cuid())
    name      String
    email     String   @unique
    Profile   Profile? @relation(fields: [profileId], references: [id])
    profileId String?
}

model Profile {
    id          String     @id @default(cuid())
    description String
    operator    Operator[]
}

model Food {
    id             String        @id @default(cuid())
    name           String
    description    String
    nutritionFacts String
    price          Decimal
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
    images         FoodImage[]
    ingredients    Ingredient[]
    menus          FoodOnMenu[]
    FoodOnOrder    FoodOnOrder[]
}

model Menu {
    id        String       @id @default(cuid())
    highlight String
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt
    foods     FoodOnMenu[]
}

model FoodOnMenu {
    food      Food    @relation(fields: [foodId], references: [id])
    foodId    String
    menu      Menu    @relation(fields: [menuId], references: [id])
    menuId    String
    available Decimal @default(0)

    @@id([foodId, menuId])
}

model Order {
    id          String        @id @default(cuid())
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    delivery    Boolean       @default(false)
    completed   Boolean       @default(false)
    Client      Client?       @relation(fields: [clientId], references: [id])
    clientId    String?
    //foodOrdered Food[]
    FoodOnOrder FoodOnOrder[]
    invoice     Invoice?
}

model Invoice {
    id        String   @id @default(cuid())
    amount    Decimal
    tax       Decimal
    total     Decimal
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    order     Order    @relation(fields: [orderId], references: [id])
    orderId   String
}

model FoodOnOrder {
    food     Food    @relation(fields: [foodId], references: [id])
    foodId   String
    order    Order   @relation(fields: [orderId], references: [id])
    orderId  String
    quantity Decimal @default(0)

    @@id([foodId, orderId])
}

model FoodImage {
    id        String   @id @default(cuid())
    url       String
    updatedAt DateTime @updatedAt
    Food      Food?    @relation(fields: [foodId], references: [id])
    foodId    String?
}

model Ingredient {
    id          String @id @default(cuid())
    name        String
    description String
    foods       Food[]
}

model Param {
    id    String @id @default(cuid())
    name  String @unique
    value String
}

// enum DayFood {
//     Breakfast
//     Lunch
//     Dinner
// }
